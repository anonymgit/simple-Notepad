/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package notepad;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class Notepad_home extends javax.swing.JFrame {

    /**
     * Creates new form Notepad_home
     */
    
    public Notepad_home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        searchDialog = new javax.swing.JDialog();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        m_newFile = new javax.swing.JMenuItem();
        m_openFile = new javax.swing.JMenuItem();
        m_saveFile = new javax.swing.JMenuItem();
        m_saveAsFile = new javax.swing.JMenuItem();
        m_closeFile = new javax.swing.JMenuItem();
        m_closeAllFile = new javax.swing.JMenuItem();
        m_renameFile = new javax.swing.JMenuItem();
        refreshDir = new javax.swing.JMenuItem();
        recentFiles = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        m_exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        cutText = new javax.swing.JMenuItem();
        copyText = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        selectAll = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();

        fileChooser.setCurrentDirectory(new java.io.File("D:\\java\\netbeans\\Notepad"));

        jLabel1.setText("Find");

        jButton1.setText("Find next");

        jLabel2.setText("Replace");

        jButton2.setText("Replace");

        jButton3.setText("Find All");

        jButton4.setText("Replace All");

        jButton5.setText("jButton5");

        javax.swing.GroupLayout searchDialogLayout = new javax.swing.GroupLayout(searchDialog.getContentPane());
        searchDialog.getContentPane().setLayout(searchDialogLayout);
        searchDialogLayout.setHorizontalGroup(
            searchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchDialogLayout.createSequentialGroup()
                .addGroup(searchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchDialogLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(searchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jTextField2))
                        .addGap(18, 18, 18)
                        .addGroup(searchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(searchDialogLayout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(searchDialogLayout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4))))
                    .addGroup(searchDialogLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        searchDialogLayout.setVerticalGroup(
            searchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchDialogLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(searchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(11, 11, 11)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabbedPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabbedPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                tabbedPaneComponentMoved(evt);
            }
        });
        editorPanel ep= new editorPanel();
        ep.setVisible(true);
        ep.setSize(200,200);
        int index=tabbedPane.getTabCount();

        tabbedPane.addTab("untitled"+index+".txt",ep);
        initTabComponent(index);

        jMenu1.setText("File");

        m_newFile.setText("New");
        m_newFile.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        m_newFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_newFileActionPerformed(evt);
            }
        });
        jMenu1.add(m_newFile);

        m_openFile.setText("Open");
        m_openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_openFileActionPerformed(evt);
            }
        });
        jMenu1.add(m_openFile);

        m_saveFile.setText("Save");
        m_saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_saveFileActionPerformed(evt);
            }
        });
        jMenu1.add(m_saveFile);

        m_saveAsFile.setText("Save As");
        m_saveAsFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_saveAsFileActionPerformed(evt);
            }
        });
        jMenu1.add(m_saveAsFile);

        m_closeFile.setText("Close");
        m_closeFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_closeFileActionPerformed(evt);
            }
        });
        jMenu1.add(m_closeFile);

        m_closeAllFile.setText("Close All");
        m_closeAllFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_closeAllFileActionPerformed(evt);
            }
        });
        jMenu1.add(m_closeAllFile);

        m_renameFile.setText("Rename");
        jMenu1.add(m_renameFile);

        refreshDir.setText("refresh");
        refreshDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshDirActionPerformed(evt);
            }
        });
        jMenu1.add(refreshDir);

        recentFiles.setText("recent");
        jMenu1.add(recentFiles);
        jMenu1.add(jSeparator1);

        m_exit.setText("Exit");
        m_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_exitActionPerformed(evt);
            }
        });
        jMenu1.add(m_exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        cutText.setText("Cut");
        cutText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutTextActionPerformed(evt);
            }
        });
        jMenu2.add(cutText);

        copyText.setText("Copy");
        copyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyTextActionPerformed(evt);
            }
        });
        jMenu2.add(copyText);

        jMenuItem11.setText("Paste");
        jMenu2.add(jMenuItem11);

        jMenuItem12.setText("Copy to Clipboard");
        jMenu2.add(jMenuItem12);

        selectAll.setText("Select All");
        selectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllActionPerformed(evt);
            }
        });
        jMenu2.add(selectAll);
        jMenu2.add(jSeparator2);

        jMenuItem14.setText("Delete");
        jMenu2.add(jMenuItem14);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Search");

        jMenuItem15.setText("Find");
        jMenu3.add(jMenuItem15);

        jMenuItem16.setText("Go to");
        jMenu3.add(jMenuItem16);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Convert");

        jMenuItem18.setText("Coversion panel");
        jMenu4.add(jMenuItem18);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_newFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_newFileActionPerformed
        // TODO add your handling code here:
        editorPanel ep= new editorPanel();
        ep.setVisible(true);
        ep.setSize(200,200);
        
        int index=tabbedPane.getTabCount();
        
        
        tabbedPane.addTab("untitled"+index+".txt",ep);
        initTabComponent(index); 
        
        
    }//GEN-LAST:event_m_newFileActionPerformed
    private void initTabComponent(int i) {
        tabbedPane.setTabComponentAt(i,
                 new ButtonTabComponent(tabbedPane));
    }   
    private void openFileNewTab(String fileName) {                                          
        // TODO add your handling code here:
        editorPanel ep= new editorPanel();
        ep.setVisible(true);
        ep.setSize(200,200);
        
        int index=tabbedPane.getTabCount();
        
        
        tabbedPane.addTab(fileName,ep);
        initTabComponent(index);
        String path=fileChooser.getSelectedFile().getParent()+"/"+fileChooser.getSelectedFile().getName();
        System.out.println(fileChooser.getCurrentDirectory());
        try
        {
            ep.open(fileChooser.getSelectedFile());
            //int i=tabbedPane.setSelectedIndex();
            tabbedPane.setTitleAt(index,fileName);
            tabbedPane.setSelectedIndex(index);
            setTitle(path);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"ERR!!"+e,"ERROR",JOptionPane.ERROR_MESSAGE);
        }
        
    }       
    private void tabbedPaneComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tabbedPaneComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tabbedPaneComponentMoved

    private void m_closeAllFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_closeAllFileActionPerformed
        // TODO add your handling code here:
        int tabCount=tabbedPane.getTabCount();
        for(int i=tabCount-1;i>=0;i--)
        {
            m_closeFileActionPerformed(evt);
        }
    }//GEN-LAST:event_m_closeAllFileActionPerformed

    private void m_closeFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_closeFileActionPerformed
        // TODO add your handling code here:
        editorPanel curr_panel=(editorPanel)tabbedPane.getSelectedComponent();
        if(curr_panel.getTextLength()!=curr_panel.getCurrentTextLength())
        {
            m_saveFileActionPerformed(evt);
        }
        int index=tabbedPane.getSelectedIndex();
        tabbedPane.remove(index);
        
    }//GEN-LAST:event_m_closeFileActionPerformed

    private void m_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_m_exitActionPerformed
    private boolean fileExist(String path)
    {
            File tempFile = new File(path);
            boolean exists = tempFile.exists(); 
            return exists;
    }
    private void m_saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_saveFileActionPerformed

        try 
        {
            int x=fileChooser.showSaveDialog(this);

            String path=fileChooser.getSelectedFile().getParent()+"/"+fileChooser.getSelectedFile().getName();
            String fileName=fileChooser.getSelectedFile().getName();
            
            boolean exists = fileExist(path);
            if(exists==true)
            {
                int xx=JOptionPane.showConfirmDialog(this,"Do You Want To OVERWRITE?\n[ "+fileChooser.getSelectedFile().getName()+"]","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
                if(xx==JOptionPane.YES_OPTION)
                {
                    editorPanel curr_panel=(editorPanel)tabbedPane.getSelectedComponent();
                    curr_panel.save(fileName);
                    setTitle(path);
                }
            }
            else
            {
                
                editorPanel curr_panel=(editorPanel)tabbedPane.getSelectedComponent();
                int index=tabbedPane.getSelectedIndex();
                curr_panel.save(fileName);
                m_openFileActionPerformed(fileName);
                
            }
        }
 
        catch (Exception e) {
            
            System.out.println(e);
        }
    }//GEN-LAST:event_m_saveFileActionPerformed

    private void m_openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_openFileActionPerformed
        // TODO add your handling code here:
        fileChooser.showOpenDialog(this);
        String fileName=fileChooser.getSelectedFile().getName();
        boolean opened=false;
        for(int i=0;i<tabbedPane.getTabCount();i++)
        {
            if(tabbedPane.getTitleAt(i).equals(fileName))
            {
                JOptionPane.showMessageDialog(this,"Already Opened");
                editorPanel curr_panel=(editorPanel)tabbedPane.getSelectedComponent();
                tabbedPane.setSelectedIndex(i);
                opened=true;
                break;
            }
        }
        if(opened==false)
        {
            System.out.println("opening new");
            openFileNewTab(fileName);
            

        }
        tabbedPane.getUI();
        tabbedPane.updateUI();
        
	
    }//GEN-LAST:event_m_openFileActionPerformed
    private void m_openFileActionPerformed(String fileName) {                                           
        
        System.out.println(fileName);
        boolean opened=false;
        for(int i=0;i<tabbedPane.getTabCount();i++)
        {
            if(tabbedPane.getTitleAt(i).equals(fileName))
            {
                JOptionPane.showMessageDialog(this,"Already Opened");
                opened=true;
                break;
            }
        }
        if(opened==false)
        {
            System.out.println("opening new");
            openFileNewTab(fileName);
        }
        tabbedPane.updateUI();
        
	
    }
    private void refreshDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshDirActionPerformed
        // TODO add your handling code here:
        fileChooser.rescanCurrentDirectory();
    }//GEN-LAST:event_refreshDirActionPerformed

    private void m_saveAsFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_saveAsFileActionPerformed
        // TODO add your handling code here:
        m_saveFileActionPerformed(evt);
        
    }//GEN-LAST:event_m_saveAsFileActionPerformed

    private void selectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllActionPerformed
        // TODO add your handling code here:
        editorPanel curr_panel=(editorPanel)tabbedPane.getSelectedComponent();
        curr_panel.selectText();
        String s=curr_panel.getSelectedText();
        System.out.println(s);
    }//GEN-LAST:event_selectAllActionPerformed

    private void cutTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutTextActionPerformed

        editorPanel curr_panel=(editorPanel)tabbedPane.getSelectedComponent();
        curr_panel.cutText();
    }//GEN-LAST:event_cutTextActionPerformed

    private void copyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyTextActionPerformed
        // TODO add your handling code here:
        editorPanel curr_panel=(editorPanel)tabbedPane.getSelectedComponent();
        curr_panel.copyText();
    }//GEN-LAST:event_copyTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notepad_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notepad_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notepad_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notepad_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Notepad_home().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem copyText;
    private javax.swing.JMenuItem cutText;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JMenuItem m_closeAllFile;
    private javax.swing.JMenuItem m_closeFile;
    private javax.swing.JMenuItem m_exit;
    private javax.swing.JMenuItem m_newFile;
    private javax.swing.JMenuItem m_openFile;
    private javax.swing.JMenuItem m_renameFile;
    private javax.swing.JMenuItem m_saveAsFile;
    private javax.swing.JMenuItem m_saveFile;
    private javax.swing.JMenuItem recentFiles;
    private javax.swing.JMenuItem refreshDir;
    private javax.swing.JDialog searchDialog;
    private javax.swing.JMenuItem selectAll;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
}
